from PIL import Image
from PIL import GifImagePlugin
from PIL import ImageEnhance
import math

gifname = "nyan.gif"

imageObject = Image.open(gifname)

print(imageObject.is_animated)

print(imageObject.is_animated)

print(imageObject.n_frames)

# Display individual frames from the loaded animated GIF file



framedataR = []
framedataG = []
framedataB = []

for frame in range(0,imageObject.n_frames):
    
    imageObject.seek(frame)
    
    curFrame = imageObject.resize( (32,32) )
    
    
    
    curFrame.save("nyan"+str(frame)+".gif")
    
    curFrame=curFrame.convert("RGB")
    
    #curFrame.convert(mode="RGB", matrix=None, dither=None, palette=0, colors=256)
    
    
    framedataR.append(list(curFrame.getdata(0)))
    framedataG.append(list(curFrame.getdata(1)))
    framedataB.append(list(curFrame.getdata(2)))
    
    



for f in range(0, len(framedataR) ):
    frameR = framedataR[f]
    frameG = framedataG[f]
    frameB = framedataB[f]
    
    file = open("Image"+str(f)+".c","w+") #create new file
    file.write("const unsigned short Webp.net-resizeimage_(1)[1024] PROGMEM={ \n")
    
    print(len(frameR))
    for i in range(0, len(frameR), 1):
        #print('-----------------------')
        R0=int(frameR[i])
        G0=int(frameG[i])
        B0=int(frameB[i])
        
        #image inhancment
        '''if R0>G0|R0>B0:
            R0=R0+(0xFF-R0)/2
            G0=(G0)/2
            B0=(B0)/2
        if G0>R0|G0>B0:
            R0=(R0)/2
            G0=G0+(0xFF-G0)/2
            B0=(B0)/2
        if B0>R0|B0>G0:
            R0=(R0)/2
            G0=(G0)/2
            B0=B0+(0xFF-B0)/2
        '''
        
        #print(hex(R0)+hex(G0)[2:]+hex(B0)[2:])
        #print(bin(R0)+" "+bin(G0)+" "+bin(B0))
        Rn=((R0>>3)<<11)&0xF800#&0xF800 #Rn=(R0>>3)
        Gn=((G0>>2)<<5)&0x07E0 #&0x07E0 #Gn=(G0>>2)
        Bn=(B0>>3)&0x001F      #&0x001F #Bn=(R0>>3)
        RGBVal=(Rn|Gn|Bn)  #RGBVal=(Rn<<11)+(Gn<<5)+Bn
        #print(hex(Rn))s
        print("RGB888:"+hex(R0)+hex(G0)[2:]+hex(B0)[2:]+" RGB565:"+hex(RGBVal))#(Rn<<11)+(Gn<<5)+Bn))
        #print("{0:#0{1}x}".format(RGBVal,6))
        file.write("{0:#0{1}x}".format(RGBVal,6))
        
        if i+1 < len(frameR):
            file.write(",")
            
        if (i+1)%16 == 0:
            file.write("   // ("+str(int(i+1))+") pixels")
            file.write("\n")
        
    file.write("};")  
        
    

""" 
// Generated by   : ImageConverter 565 Online
// Generated from : Webp.net-resizeimage (1).png
// Time generated : Tue, 29 Dec 20 23:04:32 +0100  (Server timezone: CET)
// Image Size     : 32x32 pixels
// Memory usage   : 2048 bytes


#if defined(__AVR__)
    #include <avr/pgmspace.h>
#elif defined(__PIC32MX__)
    #define PROGMEM
#elif defined(__arm__)
    #define PROGMEM
#endif

const unsigned short Webp.net-resizeimage_(1)[1024] PROGMEM={
0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0010 (16) pixels
0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0020 (32) pixels
0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0030 (48) pixels
0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0040 (64) pixels
0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x6082, 0x80C3, 0x80C3, 0x2041, 0x4862, 0x80C4,   // 0x0050 (80) pixels
0x88E4, 0x4061, 0x3041, 0x88E4, 0x88E4, 0x5882, 0x0800, 0x5882, 0x88E4, 0x88E4, 0x90E4, 0x90E4, 0x90E4, 0x68A3, 0x1000, 0x0000,   // 0x0060 (96) pixels
0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0800, 0x90E4, 0xC125, 0xC125, 0x4061, 0x70A3, 0xC125,   // 0x0070 (112) pixels
0xC125, 0x60A2, 0x4862, 0xC125, 0xC125, 0x88C4, 0x3041, 0xB925, 0xC125, 0xC125, 0xC125, 0xC125, 0xC125, 0xB925, 0x4882, 0x0000,   // 0x0080 (128) pixels
0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0800, 0x90E4, 0xC125, 0xB925, 0x4061, 0x68A3, 0xC125,   // 0x0090 (144) pixels
0xC125, 0x60A2, 0x4862, 0xC125, 0xC125, 0x80C3, 0x4062, 0xB925, 0xC125, 0xB925, 0xA104, 0xB925, 0xC125, 0xC125, 0x5882, 0x0000,   // 0x00A0 (160) pixels
0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0800, 0x90E4, 0xC125, 0xC125, 0x4061, 0x68A3, 0xC125,   // 0x00B0 (176) pixels
0xC125, 0x60A2, 0x4862, 0xC125, 0xC125, 0x80C3, 0x4062, 0xB925, 0xC125, 0x98E4, 0x1820, 0x88E4, 0xC125, 0xC125, 0x5882, 0x0000,   // 0x00C0 (192) pixels
0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x90E4, 0xC125, 0xC125, 0x4061, 0x68A3, 0xC125,   // 0x00D0 (208) pixels
0xC125, 0x60A2, 0x4062, 0xC125, 0xC125, 0x88C4, 0x4062, 0xB925, 0xC125, 0x90E4, 0x0800, 0x80C3, 0xC125, 0xC125, 0x6082, 0x0000,   // 0x00E0 (224) pixels
0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x90E4, 0xC125, 0xC125, 0x5082, 0x78C3, 0xC125,   // 0x00F0 (240) pixels
0xC125, 0x70C3, 0x5882, 0xC125, 0xC125, 0x88E4, 0x4062, 0xB925, 0xC125, 0x9904, 0x2841, 0x88E4, 0xC125, 0xC125, 0x60A2, 0x0000,   // 0x0100 (256) pixels
0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x90E4, 0xC125, 0xC125, 0xB125, 0xB925, 0xC125,   // 0x0110 (272) pixels
0xC125, 0xB925, 0xB125, 0xC125, 0xC125, 0x88E4, 0x4061, 0xB925, 0xC125, 0xB925, 0xB125, 0xB925, 0xC125, 0xC125, 0x60A2, 0x0000,   // 0x0120 (288) pixels
0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x78C3, 0xC125, 0xC125, 0xC125, 0xC125, 0xB925,   // 0x0130 (304) pixels
0xC125, 0xC125, 0xC125, 0xC125, 0xC125, 0x88E4, 0x2841, 0xB125, 0xC125, 0xC125, 0xC125, 0xC125, 0xC125, 0xB925, 0x4062, 0x0000,   // 0x0140 (320) pixels
0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x2021, 0x70A3, 0x78C3, 0x78C3, 0x6082, 0x4862,   // 0x0150 (336) pixels
0x78C3, 0x70A3, 0x5082, 0x70A3, 0x78C3, 0x5082, 0x0000, 0x4061, 0x68A3, 0x70A3, 0x68A3, 0x68A3, 0x68A3, 0x4862, 0x0800, 0x0000,   // 0x0160 (352) pixels
0x0000, 0x0000, 0x0800, 0x1820, 0x1820, 0x1820, 0x1820, 0x1820, 0x1820, 0x1020, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0170 (368) pixels
0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x1020, 0x3861, 0x4062, 0x4062, 0x4062, 0x4062, 0x4062, 0x2841, 0x0000, 0x0000,   // 0x0180 (384) pixels
0x0000, 0x0000, 0x60A2, 0xA905, 0xA905, 0xA905, 0xA905, 0xA905, 0xA905, 0xA104, 0x5882, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0190 (400) pixels
0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0800, 0x80C3, 0xB925, 0xC125, 0xC125, 0xC125, 0xC125, 0xC125, 0x80C3, 0x0000, 0x0000,   // 0x01A0 (416) pixels
0x0000, 0x0000, 0x70C3, 0xC125, 0xC125, 0xC125, 0xC125, 0xC125, 0xC125, 0xC125, 0xA104, 0x0800, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x01B0 (432) pixels
0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x1820, 0xA905, 0xC125, 0xC125, 0xC125, 0xC125, 0xC125, 0xC125, 0x80C3, 0x0000, 0x0000,   // 0x01C0 (448) pixels
0x0000, 0x0000, 0x4862, 0xB125, 0xC125, 0xC125, 0x9904, 0x90E4, 0xB925, 0xC125, 0xA104, 0x1020, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x01D0 (464) pixels
0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x1820, 0xA905, 0xC125, 0xB925, 0x80C3, 0x90E4, 0xC125, 0xC125, 0x80C3, 0x0000, 0x0000,   // 0x01E0 (480) pixels
0x0000, 0x0000, 0x0800, 0x88E4, 0xC125, 0xC125, 0xA104, 0xA104, 0xC125, 0xC125, 0x80C3, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x01F0 (496) pixels
0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0800, 0x88E4, 0xC125, 0xC125, 0xB125, 0xB925, 0xC125, 0xC125, 0x80C3, 0x0000, 0x0000,   // 0x0200 (512) pixels
0x0000, 0x0000, 0x0000, 0x88E4, 0xC125, 0xC125, 0xB925, 0xB925, 0xC125, 0xC125, 0x80C3, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0210 (528) pixels
0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0800, 0x80C3, 0xC125, 0xB925, 0xA104, 0xA905, 0xC125, 0xC125, 0x88C4, 0x0000, 0x0000,   // 0x0220 (544) pixels
0x0000, 0x0000, 0x0000, 0x88E4, 0xC125, 0xC125, 0x90E4, 0x80C3, 0xB925, 0xC125, 0xA104, 0x1020, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0230 (560) pixels
0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x1020, 0xA905, 0xC125, 0xB925, 0x90E4, 0x9904, 0xC125, 0xC125, 0xA905, 0x4062, 0x0000,   // 0x0240 (576) pixels
0x0000, 0x0000, 0x0000, 0x88E4, 0xC125, 0xC125, 0xB925, 0xB925, 0xC125, 0xC125, 0xA104, 0x1020, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0250 (592) pixels
0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x1020, 0xA104, 0xC125, 0xC125, 0xC125, 0xC125, 0xC125, 0xC125, 0xC125, 0x68A3, 0x0000,   // 0x0260 (608) pixels
0x0000, 0x0000, 0x0000, 0x88E4, 0xC125, 0xC125, 0xC125, 0xC125, 0xC125, 0xB925, 0x78C3, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0270 (624) pixels
0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x60A2, 0xA905, 0xB125, 0xB105, 0xA905, 0xA905, 0xA905, 0xA905, 0x5882, 0x0000,   // 0x0280 (640) pixels
0x0000, 0x0000, 0x0000, 0x3041, 0x4862, 0x4862, 0x4862, 0x4862, 0x4862, 0x4061, 0x1020, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0290 (656) pixels
0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x1820, 0x1820, 0x1820, 0x1820, 0x1820, 0x1820, 0x1820, 0x0800, 0x0000,   // 0x02A0 (672) pixels
0x0000, 0x0000, 0x0800, 0x4882, 0x68A3, 0x68A3, 0x68A3, 0x68A3, 0x60A3, 0x3041, 0x0000, 0x5082, 0x68A3, 0x60A3, 0x4062, 0x60A3,   // 0x02B0 (688) pixels
0x68A3, 0x3861, 0x5082, 0x68A3, 0x68A3, 0x5882, 0x1020, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x02C0 (704) pixels
0x0000, 0x0000, 0x5082, 0xB925, 0xC125, 0xC125, 0xC125, 0xC125, 0xC125, 0xA904, 0x2841, 0x98E4, 0xC125, 0xC125, 0xB925, 0xC125,   // 0x02D0 (720) pixels
0xC125, 0xB925, 0xC125, 0xC125, 0xC125, 0xC125, 0x60A3, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x02E0 (736) pixels
0x0000, 0x0000, 0x70A3, 0xC125, 0xC125, 0xB925, 0xB925, 0xC125, 0xC125, 0xB925, 0x3861, 0x90E4, 0xC125, 0xC125, 0xB925, 0xB925,   // 0x02F0 (752) pixels
0xC125, 0xC125, 0xB925, 0xB925, 0xC125, 0xC125, 0x80C3, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0300 (768) pixels
0x0000, 0x0000, 0x70A3, 0xC125, 0xC125, 0x80C3, 0x3041, 0xA905, 0xC125, 0xB925, 0x3861, 0x90E4, 0xC125, 0xB925, 0x5882, 0x80C4,   // 0x0310 (784) pixels
0xC125, 0xC125, 0x70A3, 0x68A3, 0xC125, 0xC125, 0x80C3, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0320 (800) pixels
0x0000, 0x0000, 0x70A3, 0xC125, 0xC125, 0x68A3, 0x0800, 0xA104, 0xC125, 0xB925, 0x3861, 0x90E4, 0xC125, 0xB925, 0x3861, 0x70C3,   // 0x0330 (816) pixels
0xC125, 0xC125, 0x5882, 0x4882, 0xC125, 0xC125, 0x80C3, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0340 (832) pixels
0x0000, 0x0000, 0x70A3, 0xC125, 0xC125, 0x70C3, 0x1820, 0xA104, 0xC125, 0xB925, 0x3861, 0x90E4, 0xC125, 0xB925, 0x3861, 0x70C3,   // 0x0350 (848) pixels
0xC125, 0xC125, 0x5882, 0x5082, 0xC125, 0xC125, 0x80C3, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0360 (864) pixels
0x0000, 0x0000, 0x70A3, 0xC125, 0xC125, 0xB125, 0xA104, 0xB925, 0xC125, 0xB925, 0x3861, 0x90E4, 0xC125, 0xB925, 0x3861, 0x70C3,   // 0x0370 (880) pixels
0xC125, 0xC125, 0x5882, 0x5082, 0xC125, 0xC125, 0x80C3, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0380 (896) pixels
0x0000, 0x0000, 0x60A2, 0xC125, 0xC125, 0xC125, 0xC125, 0xC125, 0xC125, 0xB125, 0x3041, 0x98E4, 0xC125, 0xC125, 0x3861, 0x78C3,   // 0x0390 (912) pixels
0xC125, 0xC125, 0x5882, 0x5082, 0xC125, 0xC125, 0x80C3, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x03A0 (928) pixels
0x0000, 0x0000, 0x1820, 0x78C3, 0x90E4, 0x90E4, 0x90E4, 0x90E4, 0x90E4, 0x5882, 0x0800, 0x70A3, 0x90E4, 0x90E4, 0x2841, 0x5082,   // 0x03B0 (944) pixels
0x90E4, 0x90E4, 0x4061, 0x3861, 0x90E4, 0x90E4, 0x60A2, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x03C0 (960) pixels
0x0000, 0x0000, 0x0000, 0x0000, 0x0800, 0x0800, 0x0800, 0x0800, 0x0800, 0x0000, 0x0000, 0x0000, 0x0800, 0x0800, 0x0000, 0x0000,   // 0x03D0 (976) pixels
0x0800, 0x0800, 0x0000, 0x0000, 0x0800, 0x0800, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x03E0 (992) pixels
0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x03F0 (1008) pixels
0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,   // 0x0400 (1024) pixels
};
"""